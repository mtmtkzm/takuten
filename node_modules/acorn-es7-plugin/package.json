{
  "_args": [
    [
      "acorn-es7-plugin@https://registry.npmjs.org/acorn-es7-plugin/-/acorn-es7-plugin-1.0.11.tgz",
      "/Users/matsumotokazuma/develop/mtmtkzm/takuten2016"
    ]
  ],
  "_from": "acorn-es7-plugin@>=1.0.10 <2.0.0",
  "_id": "acorn-es7-plugin@1.0.11",
  "_inCache": true,
  "_location": "/acorn-es7-plugin",
  "_phantomChildren": {},
  "_requested": {
    "name": "acorn-es7-plugin",
    "raw": "acorn-es7-plugin@https://registry.npmjs.org/acorn-es7-plugin/-/acorn-es7-plugin-1.0.11.tgz",
    "rawSpec": "https://registry.npmjs.org/acorn-es7-plugin/-/acorn-es7-plugin-1.0.11.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/acorn-es7-plugin/-/acorn-es7-plugin-1.0.11.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/espower-source",
    "/power-assert-formatter"
  ],
  "_resolved": "https://registry.npmjs.org/acorn-es7-plugin/-/acorn-es7-plugin-1.0.11.tgz",
  "_shasum": "1f6b19fa09de0806f84559289f1f5247000d1d47",
  "_shrinkwrap": null,
  "_spec": "acorn-es7-plugin@https://registry.npmjs.org/acorn-es7-plugin/-/acorn-es7-plugin-1.0.11.tgz",
  "_where": "/Users/matsumotokazuma/develop/mtmtkzm/takuten2016",
  "author": {
    "name": "matatbread"
  },
  "bugs": {
    "url": "https://github.com/MatAtBread/acorn-es7-plugin/issues"
  },
  "dependencies": {},
  "description": "A plugin for the Acorn parser that understands the ES7 keywords async and await",
  "devDependencies": {},
  "homepage": "https://github.com/MatAtBread/acorn-es7-plugin#readme",
  "keywords": [
    "acorn",
    "parser",
    "es7",
    "async",
    "await"
  ],
  "license": "MIT",
  "main": "acorn-es7-plugin.js",
  "name": "acorn-es7-plugin",
  "optionalDependencies": {},
  "readme": "[![NPM](https://nodei.co/npm/acorn-es7-plugin.png?downloads=true&downloadRank=true)](https://nodei.co/npm/acorn-es7-plugin/)\n\nacorn-es7-plugin\n======\n\nacorn-es7-plugin is a plugin for the [Acorn](https://github.com/marijnh/acorn) parser that generates ESTrees following the ['experimental' specification](https://github.com/estree/estree/blob/master/experimental/async-functions.md) for asynchronous functions.\n\n\tnpm install --save acorn-es7-plugin\n\nUsage\n=====\n\nAdding the plugin\n\n\t// Require acorn as usual\n\tvar acorn = require(\"acorn\");\n\t// Add the es7-plugin\n\trequire('./acorn-es7-plugin')(acorn) ;\n\nUsing the plugin\n\n\tvar code = \"async function x(){ if (x) return await(x-1) ; return 0 ; }\\n\";\n\tvar ast = acorn.parse(code,{\n\t\t// Specify use of the plugin\n\t\tplugins:{asyncawait:true},\n\t\t// Specify the ecmaVersion\n\t\tecmaVersion:7\n\t}) ;\n\t// Show the AST\n\tconsole.log(JSON.stringify(ast,null,2)) ;\n\nOutput:\n\n\t{\n\t\t\"type\": \"Program\",\n\t\t\"body\": [\n\t\t{\n\t\t  \"type\": \"FunctionDeclaration\",\n\t\t  \"id\": {\n\t\t    \"type\": \"Identifier\",\n\t\t    \"name\": \"x\"\n\t\t  },\n\t\t  \"generator\": false,\n\t\t  \"expression\": false,\n\t\t  \"params\": [],\n\t\t  \"body\": {\n\t\t    \"type\": \"BlockStatement\",\n\t\t    \"body\": [\n\t\t      {\n\t\t        \"type\": \"IfStatement\",\n\t\t        \"test\": {\n\t\t          \"type\": \"Identifier\",\n\t\t          \"name\": \"x\"\n\t\t        },\n\t\t        \"consequent\": {\n\t\t          \"type\": \"ReturnStatement\",\n\t\t          \"argument\": {\n\t\t            \"type\": \"AwaitExpression\",\n\t\t            \"operator\": \"await\",\n\t\t            \"argument\": {\n\t\t              \"type\": \"BinaryExpression\",\n\t\t              \"left\": {\n\t\t                \"type\": \"Identifier\",\n\t\t                \"name\": \"x\"\n\t\t              },\n\t\t              \"operator\": \"-\",\n\t\t              \"right\": {\n\t\t                \"type\": \"Literal\",\n\t\t                \"value\": 1,\n\t\t                \"raw\": \"1\"\n\t\t              }\n\t\t            }\n\t\t          }\n\t\t        },\n\t\t        \"alternate\": null\n\t\t      },\n\t\t      {\n\t\t        \"type\": \"ReturnStatement\",\n\t\t        \"argument\": {\n\t\t          \"type\": \"Literal\",\n\t\t          \"value\": 0,\n\t\t          \"raw\": \"0\"\n\t\t        }\n\t\t      }\n\t\t    ]\n\t\t  },\n\t\t  \"async\": true\n\t\t}\n\t\t],\n\t\t\"sourceType\": \"script\"\n\t}\n\nOptions & Compliance\n====================\nThe parser attempts to enforce strict contextualisation of `async` and `await`. Specifically, `async` is only a keyword if it precedes a function declaration, function expression or arrow function. `await` is only a keyword inside an `async` function. Outside of these contexts, both tokens are treated as identifiers (as they were in ES6 and earlier).\n\nWhen using the plugin, you can supply an object in place of the 'true' flag with the following options.\n\n| flag | meaning |\n|------|---------|\n| awaitAnywhere | If `await` is used outside of an async function and could not be an identifier, generate an AwaitExpression node. This typically means you can use `await` anywhere _except_ when its argument would require parentheses, as this parses to a call to 'await(....)'. |\n| asyncExits | Allow the additional sequences `async return <optional-expression>` and `async throw <expression>`. These sequences are used with [nodent](https://github.com/MatAtBread/nodent). In each case, as with async functions, a standard ReturnStatement (or ThrowStatement) node is generated, with an additional member 'async' set to true.\n\nChangelog\n=========\n\n19-Dec-15: v1.0.11\n\n- Generate error if 'await' is used as an identifier within an async function.\n\n10-Dec-15: v1.0.10\n\n- Update the plugin code to remove 'async' and 'await' from the super-strict keyword tests introduced in acorn v2.6.x that generate parse errors before the plugin gets a chance to manage them.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MatAtBread/acorn-es7-plugin.git"
  },
  "scripts": {
    "test": "cd test ; npm i ; npm test"
  },
  "version": "1.0.11"
}
